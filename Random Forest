from sklearn.datasets import load_iris
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix
import pandas as pd

iris = load_iris()
data = pd.DataFrame(data=iris.data, columns=iris.feature_names)
data['species'] = iris.target

X = data.drop('species', axis=1)  
y = data['species']  
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

rf_classifier = RandomForestClassifier(n_estimators=100, random_state=0)
rf_classifier.fit(X_train, y_train)

y_pred = rf_classifier.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
print("Accuracy:", accuracy)
print("Confusion Matrix:\n", conf_matrix)



Код применяет алгоритм случайного леса (Random Forest) для классификации данных набора данных Iris.
Данные разбиваются на обучающую и тестовую выборки, обучается модель случайного леса с 100 деревьями, 
а затем делается предсказание на тестовой выборке. В результате вычисляются точность модели (accuracy)
и матрица ошибок (confusion matrix) для анализа качества классификации.
